{"componentChunkName":"component---src-templates-markdown-js","path":"/006-default-target","result":{"data":{"markdownRemark":{"html":"<h1>デフォルトターゲット</h1>\n<p>make は <code class=\"language-text\">make all</code> のようにターゲットを指定せずただ <code class=\"language-text\">make</code> だけでも実行できます。\nその際に何が実行されるかというと、「デフォルトゴール（<a href=\"https://www.gnu.org/software/make/manual/html_node/Special-Variables.html#:~:text=.DEFAULT_GOAL\"><code class=\"language-text\">.DEFAULT_GOAL</code></a>）」に指定されたターゲットが実行されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> help\n\n.DEFAULT_GOAL <span class=\"token operator\">:=</span> help\n\n<span class=\"token symbol\">help</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$@</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> -f 01.mk\n<span class=\"token builtin class-name\">echo</span> <span class=\"token builtin class-name\">help</span>\n<span class=\"token builtin class-name\">help</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">.DEFAULT_GOAL</code> は明記しなければ Makefile 内の最初のターゲットが自動的に設定されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> help all\n\n<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">info</span> default goal is <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>.DEFAULT_GOAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token symbol\">help</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$@</span>\n\n<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">info</span> default goal is <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>.DEFAULT_GOAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token symbol\">all</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$@</span>\n\n<span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">info</span> default goal is <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>.DEFAULT_GOAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> -f 02.mk\ndefault goal is\ndefault goal is <span class=\"token builtin class-name\">help</span>\ndefault goal is <span class=\"token builtin class-name\">help</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token builtin class-name\">help</span>\n<span class=\"token builtin class-name\">help</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>そのため、ターゲットの指定なしで実行されて構わないターゲットを最初に書くようにすれば、<code class=\"language-text\">.DEFAULT_GOAL</code> を明記する必要はありません。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> help\n\n<span class=\"token symbol\">help</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$@</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> -f 03.mk\n<span class=\"token builtin class-name\">echo</span> <span class=\"token builtin class-name\">help</span>\n<span class=\"token builtin class-name\">help</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><a href=\"https://www.gnu.org/software/make/manual/html_node/Make-Control-Functions.html#:~:text=$(info%20text%E2%80%A6)\"><code class=\"language-text\">$(info ...)</code></a> は make の関数です。ただ引数を出力するだけで、Makefile の動作を確認する際に使います。</p>\n<h2>自身を cat する help</h2>\n<p>よくわからずターゲットの指定なしで <code class=\"language-text\">make</code> を叩いてしまうときのために、デフォルトゴールとして「自身を cat する help ルール」をの先頭に書くのはよいプラクティスだと思います。\n副作用がないですし、内容を読めば次のステップに進む情報を得られるからです。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> help build\n\n<span class=\"token symbol\">help</span><span class=\"token punctuation\">:</span>\n\tcat 04.mk\n\n<span class=\"token symbol\">build</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># command ...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> -f 04.mk\n<span class=\"token function\">cat</span> 04.mk\n.PHONY: <span class=\"token builtin class-name\">help</span> build\n\nhelp:\n        <span class=\"token function\">cat</span> 04.mk\n\nbuild:\n        <span class=\"token comment\"># command ...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>明示的に cat するファイル名を書くのはメンテナンス性がいまいちですし、\n実行結果に <code class=\"language-text\">cat 04.mk</code> の行が出てくるのも内容を読むのには邪魔です。</p>\n<p>そこで使うのが <code class=\"language-text\">@</code> <code class=\"language-text\">$(firstword ...)</code> <code class=\"language-text\">$(MAKEFILE_LIST)</code> です。\nこれで出力が読みやすくなって、ファイル名が変わっても問題なく動くようになりました。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> help\n\n<span class=\"token symbol\">help</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token operator\">@</span>cat <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">firstword</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>MAKEFILE_LIST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token symbol\">build</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># command ...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> -f 05.mk\n.PHONY: <span class=\"token builtin class-name\">help</span>\n\nhelp:\n        @cat <span class=\"token variable\"><span class=\"token variable\">$(</span>firstword <span class=\"token punctuation\">$(</span>MAKEFILE_LIST<span class=\"token punctuation\">)</span><span class=\"token variable\">)</span></span>\n\nbuild:\n        <span class=\"token comment\"># command ...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>@</h2>\n<p><code class=\"language-text\">@</code> は「レシピ出力（<a href=\"https://www.gnu.org/software/make/manual/html_node/Echoing.html\">Recipe Echoing</a>）を抑制する記号です。\n通常 make はコマンドを出力しますが、<code class=\"language-text\">@</code> で始まるコマンド行は出力しません。</p>\n<p>ただ、コマンドを出力するのがデフォルトの挙動なので、特別な理由がない限りつけない方がよいでしょう。\nすべての行に <code class=\"language-text\">@</code> をつけて回るのはツールの使い方として間違っていないでしょうか。</p>\n<h2>$(MAKEFILE_LIST)</h2>\n<p><a href=\"https://www.gnu.org/software/make/manual/html_node/Special-Variables.html\"><code class=\"language-text\">$(MAKEFILE_LIST)</code></a> は make がパースした Makefile のリストです。\n通常は実行対象の Makefile だけが与えられますが、他の Makefile を <a href=\"https://www.gnu.org/software/make/manual/html_node/Include.html\"><code class=\"language-text\">include</code></a> した場合、複数のファイル名が与えられます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> info run\n\n<span class=\"token symbol\">info</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>MAKEFILE_LIST<span class=\"token punctuation\">)</span>\n\n<span class=\"token symbol\">run</span><span class=\"token punctuation\">:</span>\n\techo NAME<span class=\"token operator\">=</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>NAME<span class=\"token punctuation\">)</span>\n\techo HOGE<span class=\"token operator\">=</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>HOGE<span class=\"token punctuation\">)</span>\n\techo FUGA<span class=\"token operator\">=</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>FUGA<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">include</span> hoge.mk fuga.mk</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token comment\"># hoge.mk</span>\nNAME <span class=\"token operator\">:=</span> hoge\nHOGE <span class=\"token operator\">:=</span> hoge</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token comment\"># fuga.mk</span>\nNAME <span class=\"token operator\">:=</span> fuga\nFUGA <span class=\"token operator\">:=</span> fuga</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> -f 06.mk info\n<span class=\"token builtin class-name\">echo</span>  06.mk hoge.mk fuga.mk\n06.mk hoge.mk fuga.mk\n$ <span class=\"token function\">make</span> -f 06.mk run\n<span class=\"token builtin class-name\">echo</span> <span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span>fuga\n<span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span>fuga\n<span class=\"token builtin class-name\">echo</span> <span class=\"token assign-left variable\">HOGE</span><span class=\"token operator\">=</span>hoge\n<span class=\"token assign-left variable\">HOGE</span><span class=\"token operator\">=</span>hoge\n<span class=\"token builtin class-name\">echo</span> <span class=\"token assign-left variable\">FUGA</span><span class=\"token operator\">=</span>fuga\n<span class=\"token assign-left variable\">FUGA</span><span class=\"token operator\">=</span>fuga</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>$(firstword ...)</h2>\n<p><a href=\"https://www.gnu.org/software/make/manual/html_node/Text-Functions.html#:~:text=$(firstword%20names%E2%80%A6)\"><code class=\"language-text\">$(firstword ...)</code></a> はリストから最初の要素を取り出す関数です。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> list\n\nLIST <span class=\"token operator\">:=</span> hoge fuga vaa\n\n<span class=\"token symbol\">list</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">firstword</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>LIST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> -f 07.mk list\n<span class=\"token builtin class-name\">echo</span> hoge\nhoge</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">$(MAKEFILE_LIST)</code> はパースした順にファイル名を格納します。cat したいのはユーザが実行した Makefile であることがほとんどなので、<code class=\"language-text\">@cat $(firstword $(MAKEFILE_LIST))</code> が常用句になっています。</p>\n<p>多少複雑なので最初は <code class=\"language-text\">@cat Makefile</code> でもよいと思いますが、慣れると脳死で書き始められて便利です。</p>","excerpt":"デフォルトターゲット make は  のようにターゲットを指定せずただ  だけでも実行できます。\nその際に何が実行されるかというと、「デフォルトゴール（）」に指定されたターゲットが実行されます。  は明記しなければ Makefile 内の最初のターゲットが自動的に設定されます。 そのため、ターゲットの指定なしで実行さ…","frontmatter":{"date":"December 06, 2020","slug":"/006-default-target","title":"デフォルトターゲット"}}},"pageContext":{"slug":"/006-default-target","nodes":[{"node":{"frontmatter":{"slug":"/001-makefile-in-2020","title":"2020年の Makefile"}}},{"node":{"frontmatter":{"slug":"/002-phony-target-and-prerequisites","title":"偽のターゲットと前提条件"}}},{"node":{"frontmatter":{"slug":"/003-variable","title":"変数"}}},{"node":{"frontmatter":{"slug":"/004-automatic-variable","title":"自動変数"}}},{"node":{"frontmatter":{"slug":"/005-c-and-f-option","title":"-C オプションと -f オプション"}}},{"node":{"frontmatter":{"slug":"/006-default-target","title":"デフォルトターゲット"}}},{"node":{"frontmatter":{"slug":"/007-exit-status","title":"終了ステータス"}}},{"node":{"frontmatter":{"slug":"/008-text-functions","title":"文字列の関数"}}},{"node":{"frontmatter":{"slug":"/009-functions-for-filenames","title":"ファイル名の関数"}}},{"node":{"frontmatter":{"slug":"/010-functions-for-lists","title":"リストの関数"}}}]}},"staticQueryHashes":["3649515864","63159454"]}