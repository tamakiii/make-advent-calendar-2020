{"componentChunkName":"component---src-templates-markdown-js","path":"/011-shell-function","result":{"data":{"markdownRemark":{"html":"<h1>shell 関数</h1>\n<p>shell はシェルコマンドを実行して出力を返します。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">shell</span> command<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>出力は変数に代入できますし、空白区切りであればリストとしても扱えます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\">ls <span class=\"token operator\">:=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">shell</span> ls<span class=\"token punctuation\">)</span>\n\n<span class=\"token symbol\">ls</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">firstword</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>ls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> <span class=\"token function\">ls</span>\n<span class=\"token builtin class-name\">echo</span> Makefile fuga hoge list.txt\nMakefile fuga hoge list.txt\n<span class=\"token builtin class-name\">echo</span> Makefile\nMakefile</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>出力の改行（newline）はスペースに置換され、リストとして扱われます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\">cat <span class=\"token operator\">:=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">shell</span> cat list.txt<span class=\"token punctuation\">)</span>\n\n<span class=\"token symbol\">cat</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">)</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lastword</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>cat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">cat</span> list.txt\nhoge\nfuga\nvaa\n$ <span class=\"token function\">make</span> <span class=\"token function\">cat</span>\n<span class=\"token builtin class-name\">echo</span> hoge fuga vaa\nhoge fuga vaa\n<span class=\"token builtin class-name\">echo</span> vaa\nvaa</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>!= 代入演算子</h2>\n<p>変数への代入には <code class=\"language-text\">!=</code> 代入演算子が使えます。<code class=\"language-text\">!=</code> は <code class=\"language-text\">:=</code> と同じく一度だけ評価されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\">op <span class=\"token operator\">!=</span> date +%s\n\n<span class=\"token symbol\">op1</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span>\n\tsleep 3\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span>\n\n<span class=\"token symbol\">op2</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> op1 op2\n<span class=\"token builtin class-name\">echo</span> <span class=\"token number\">1607849554</span>\n<span class=\"token number\">1607849554</span>\n<span class=\"token function\">sleep</span> <span class=\"token number\">3</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token number\">1607849554</span>\n<span class=\"token number\">1607849554</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token number\">1607849554</span>\n<span class=\"token number\">16078495543</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>ただ、Makefile が読まれた際の処理量が増えると make が重くなるため、後述の <code class=\"language-text\">variable ?= $(shell ...)</code> または <code class=\"language-text\">=</code> を使うことが多いです。</p>\n<h2>.SHELLSTATUS</h2>\n<p>shell 関数または <code class=\"language-text\">!=</code> 代入演算子が使用された後、その終了ステータスは <code class=\"language-text\">.SHELLSTATUS</code> 変数に格納されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token symbol\">shell-status</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token operator\">@</span>echo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">shell</span> pwd<span class=\"token punctuation\">)</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>.SHELLSTATUS<span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">@</span>echo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">shell</span> exit 127<span class=\"token punctuation\">)</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>.SHELLSTATUS<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> shell-status\n/work/example/011\n<span class=\"token builtin class-name\">echo</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token number\">127</span>\n<span class=\"token number\">127</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>$$ エスケープ</h2>\n<p>ルールのコマンド部分に <code class=\"language-text\">$(shell ...)</code> を書くと、Makefile が読まれたタイミングで評価され、ルールの実行前に展開されてしまいます。\n実行時まで評価を遅延させたい場合は <code class=\"language-text\">$$</code> でエスケープすることで、通常のサブシェルとして実行できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token symbol\">subshell</span><span class=\"token punctuation\">:</span>\n\tls -lsa <span class=\"token variable\">$$</span><span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token function\">make</span> subshell\n<span class=\"token function\">ls</span> -lsa <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">)</span></span>\ntotal <span class=\"token number\">8</span>\n<span class=\"token number\">0</span> drwxrwxr-x  <span class=\"token number\">6</span> root root <span class=\"token number\">192</span> Dec <span class=\"token number\">13</span> 08:46 <span class=\"token builtin class-name\">.</span>\n<span class=\"token number\">0</span> drwxrwxr-x <span class=\"token number\">14</span> root root <span class=\"token number\">448</span> Dec <span class=\"token number\">13</span> 08:43 <span class=\"token punctuation\">..</span>\n<span class=\"token number\">4</span> -rw-rw-r--  <span class=\"token number\">1</span> root root <span class=\"token number\">411</span> Dec <span class=\"token number\">13</span> 09:01 Makefile\n<span class=\"token number\">0</span> -rw-r--r--  <span class=\"token number\">1</span> root root   <span class=\"token number\">0</span> Dec <span class=\"token number\">13</span> 08:44 fuga\n<span class=\"token number\">0</span> -rw-r--r--  <span class=\"token number\">1</span> root root   <span class=\"token number\">0</span> Dec <span class=\"token number\">13</span> 08:44 hoge\n<span class=\"token number\">4</span> -rw-r--r--  <span class=\"token number\">1</span> root root  <span class=\"token number\">13</span> Dec <span class=\"token number\">13</span> 08:46 list.txt</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>これは単純な <code class=\"language-text\">$</code> のエスケープなので、<code class=\"language-text\">awk &#39;{ print $$1 }</code> といったことも当然できます。</p>\n<h2>評価を遅延する</h2>\n<p>実行に時間がかかるため本当に必要なときだけ実行させたいコマンドには、必要になったときに評価される <code class=\"language-text\">?=</code> や <code class=\"language-text\">=</code> 代入演算子が使えます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\">PROFILE <span class=\"token operator\">:=</span>\nREGION <span class=\"token operator\">:=</span>\nBUCKET <span class=\"token operator\">:=</span> s3<span class=\"token punctuation\">:</span>//example.com/\n\naws <span class=\"token operator\">:=</span> aws --profile<span class=\"token operator\">=</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>PROFILE<span class=\"token punctuation\">)</span> --region<span class=\"token operator\">=</span><span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>REGION<span class=\"token punctuation\">)</span>\ns3ls <span class=\"token operator\">?=</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">shell</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>aws<span class=\"token punctuation\">)</span> s3 ls <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>BUCKET<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> awk <span class=\"token string\">'{print $$4}'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token symbol\">s3ls</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>s3ls<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> s3ls <span class=\"token assign-left variable\">PROFILE</span><span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>. <span class=\"token assign-left variable\">REGION</span><span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>. <span class=\"token assign-left variable\">BUCKET</span><span class=\"token operator\">=</span><span class=\"token punctuation\">..</span>.\n<span class=\"token builtin class-name\">echo</span>  Makefile fuga hoge list.txt\nMakefile fuga hoge list.txt</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>リンク</h2>\n<ul>\n<li><a href=\"https://www.gnu.org/software/make/manual/html_node/Shell-Function.html\">https://www.gnu.org/software/make/manual/html_node/Shell-Function.html</a></li>\n<li><a href=\"https://www.gnu.org/software/make/manual/html_node/Setting.html\">https://www.gnu.org/software/make/manual/html_node/Setting.html</a></li>\n<li><a href=\"https://pubs.opengroup.org/onlinepubs/9699919799.2016edition/utilities/V3_chap02.html#tag_18_06_03\">https://pubs.opengroup.org/onlinepubs/9699919799.2016edition/utilities/V3<em>chap02.html#tag</em>18<em>06</em>03</a></li>\n</ul>","excerpt":"shell 関数 shell はシェルコマンドを実行して出力を返します。 出力は変数に代入できますし、空白区切りであればリストとしても扱えます。 出力の改行（newline）はスペースに置換され、リストとして扱われます。 != 代入演算子 変数への代入には  代入演算子が使えます。 は  と同じく一度だけ評価されます…","frontmatter":{"date":"December 11, 2020","slug":"/011-shell-function","title":"shell 関数"}}},"pageContext":{"slug":"/011-shell-function","nodes":[{"node":{"frontmatter":{"slug":"/001-makefile-in-2020","title":"2020年の Makefile"}}},{"node":{"frontmatter":{"slug":"/002-phony-target-and-prerequisites","title":"偽のターゲットと前提条件"}}},{"node":{"frontmatter":{"slug":"/003-variable","title":"変数"}}},{"node":{"frontmatter":{"slug":"/004-automatic-variable","title":"自動変数"}}},{"node":{"frontmatter":{"slug":"/005-c-and-f-option","title":"-C オプションと -f オプション"}}},{"node":{"frontmatter":{"slug":"/006-default-target","title":"デフォルトターゲット"}}},{"node":{"frontmatter":{"slug":"/007-exit-status","title":"終了ステータス"}}},{"node":{"frontmatter":{"slug":"/008-text-functions","title":"文字列の関数"}}},{"node":{"frontmatter":{"slug":"/009-functions-for-filenames","title":"ファイル名の関数"}}},{"node":{"frontmatter":{"slug":"/010-functions-for-lists","title":"リストの関数"}}},{"node":{"frontmatter":{"slug":"/011-shell-function","title":"shell 関数"}}}]}},"staticQueryHashes":["3649515864","63159454"]}