{"componentChunkName":"component---src-templates-markdown-js","path":"/007-exit-status","result":{"data":{"markdownRemark":{"html":"<h1>終了ステータス</h1>\n<p>make はコマンドが non-zero なステータスで終了すると実行を中断します（<a href=\"https://www.gnu.org/software/make/manual/html_node/Errors.html\">Errors in Recipes</a>）。\nこのため「下手に処理が進んでどこで失敗しているのか分からない」といった事になりにくいですし、異常系をあまり考えずにコマンドを書き連ねられます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> test\n\n<span class=\"token symbol\">test</span><span class=\"token punctuation\">:</span>\n\ttest 0 <span class=\"token operator\">=</span> 0\n\ttest 1 <span class=\"token operator\">!=</span> 1 <span class=\"token comment\"># would fail</span>\n\ttest 2 <span class=\"token operator\">=</span> 2</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> <span class=\"token builtin class-name\">test</span>\n<span class=\"token builtin class-name\">test</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token builtin class-name\">test</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># would fail</span>\nmake: *** <span class=\"token punctuation\">[</span>Makefile:5: test<span class=\"token punctuation\">]</span> Error <span class=\"token number\">1</span>\n\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$?</span>\n<span class=\"token number\">2</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>make は基本的に 0 または 2 の終了ステータスを返します（<a href=\"https://www.gnu.org/software/make/manual/html_node/Running.html\">How to Run make</a>）。\n1 を返すのは特殊な実行時だけなので non-zero か正常終了かだけ気にしておけばよいと思います。</p>\n<h2>sh -ex</h2>\n<p>処理を中断する動きは <code class=\"language-text\">sh</code> の <code class=\"language-text\">-e</code> オプションと似ています。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">man</span> <span class=\"token function\">sh</span>\n<span class=\"token punctuation\">..</span>.\n-e errexit  If not interactive, <span class=\"token builtin class-name\">exit</span> immediately <span class=\"token keyword\">if</span> any untested <span class=\"token builtin class-name\">command</span> fails.\n            The <span class=\"token builtin class-name\">exit</span> status of a <span class=\"token builtin class-name\">command</span> is considered to be explicitly tested\n            <span class=\"token keyword\">if</span> the <span class=\"token builtin class-name\">command</span> is used to control an if, elif, while, or <span class=\"token keyword\">until</span><span class=\"token punctuation\">;</span> or\n            <span class=\"token keyword\">if</span> the <span class=\"token builtin class-name\">command</span> is the left hand operand of an <span class=\"token string\">\"&amp;&amp;\"</span> or <span class=\"token string\">\"||\"</span> operator.\n\n-x xtrace   Write each <span class=\"token builtin class-name\">command</span> to standard error <span class=\"token punctuation\">(</span>preceded by a <span class=\"token string\">'+ '</span><span class=\"token punctuation\">)</span> before\n            it is executed.  Useful <span class=\"token keyword\">for</span> debugging.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>実行したコマンドが non-zero ステータスで終了した場合に即座に終了する <code class=\"language-text\">-e</code> オプションと、シェルスクリプト内で実際に実行されたコマンドを表示する <code class=\"language-text\">-x</code> オプションをつけるのはシェルスクリプトを書く際によく使われるプラクティスのひとつです。</p>\n<p>これも十分有用ですがしれっと実行を中断するので、失敗に気づきやすくするにはひと手間かけてやる必要があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token shebang important\">#!/bin/sh</span>\n\n<span class=\"token builtin class-name\">set</span> -e\n\n<span class=\"token builtin class-name\">test</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token builtin class-name\">test</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># would fail</span>\n<span class=\"token builtin class-name\">test</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">sh</span> -x test.sh\n+ <span class=\"token builtin class-name\">set</span> -e\n+ <span class=\"token builtin class-name\">test</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n+ <span class=\"token builtin class-name\">test</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span>\n$ <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$?</span>\n<span class=\"token number\">1</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">$?</code> は最後に実行されたコマンドの終了ステータスです。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token builtin class-name\">test</span> <span class=\"token number\">0</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$?</span>\n<span class=\"token number\">0</span>\n$ <span class=\"token builtin class-name\">test</span> <span class=\"token number\">1</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$?</span>\n<span class=\"token number\">1</span>\n$ <span class=\"token builtin class-name\">test</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$?</span>\n<span class=\"token number\">0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>リンク</h2>\n<ul>\n<li><a href=\"https://qiita.com/yn-misaki/items/6fcfab082dd664f10d4e#%E4%BE%BF%E5%88%A9%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%9F%E3%81%A1\">https://qiita.com/yn-misaki/items/6fcfab082dd664f10d4e</a></li>\n<li><a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_05_02\">https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html</a></li>\n<li><a href=\"https://pubs.opengroup.org/onlinepubs/9699919799//utilities/sh.html#:~:text=The%20following%20exit%20values%20shall%20be%20returned\">https://pubs.opengroup.org/onlinepubs/9699919799//utilities/sh.html</a></li>\n</ul>","excerpt":"終了ステータス make はコマンドが non-zero なステータスで終了すると実行を中断します（Errors in Recipes）。\nこのため「下手に処理が進んでどこで失敗しているのか分からない」といった事になりにくいですし、異常系をあまり考えずにコマンドを書き連ねられます。 make は基本的に 0 または …","frontmatter":{"date":"December 07, 2020","slug":"/007-exit-status","title":"終了ステータス"}}},"pageContext":{"slug":"/007-exit-status","nodes":[{"node":{"frontmatter":{"slug":"/001-makefile-in-2020","title":"2020年の Makefile"}}},{"node":{"frontmatter":{"slug":"/002-phony-target-and-prerequisites","title":"偽のターゲットと前提条件"}}},{"node":{"frontmatter":{"slug":"/003-variable","title":"変数"}}},{"node":{"frontmatter":{"slug":"/004-automatic-variable","title":"自動変数"}}},{"node":{"frontmatter":{"slug":"/005-c-and-f-option","title":"-C オプションと -f オプション"}}},{"node":{"frontmatter":{"slug":"/006-default-target","title":"デフォルトターゲット"}}},{"node":{"frontmatter":{"slug":"/007-exit-status","title":"終了ステータス"}}},{"node":{"frontmatter":{"slug":"/008-text-functions","title":"文字列の関数"}}},{"node":{"frontmatter":{"slug":"/009-functions-for-filenames","title":"ファイル名の関数"}}},{"node":{"frontmatter":{"slug":"/010-functions-for-lists","title":"リストの関数"}}},{"node":{"frontmatter":{"slug":"/011-shell-function","title":"shell 関数"}}}]}},"staticQueryHashes":["3649515864","63159454"]}