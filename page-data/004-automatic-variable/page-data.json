{"componentChunkName":"component---src-templates-markdown-js","path":"/004-automatic-variable","result":{"data":{"markdownRemark":{"html":"<h1>自動変数</h1>\n<p>自動変数（<a href=\"https://www.gnu.org/software/make/manual/html_node/Automatic-Variables.html\">Automatic Variable</a>）は実行するルールが定まると make が自動的に設定する変数です。</p>\n<p>タスクランナー的な用途で主に使うのは以下の5個です。</p>\n<ul>\n<li><code class=\"language-text\">$@</code> ターゲットのファイル名を表します</li>\n<li><code class=\"language-text\">$^</code> 必要条件（Prerequisite）を表します</li>\n<li><code class=\"language-text\">$&lt;</code> 必要条件の最初の1つを表します</li>\n<li><code class=\"language-text\">$(@F)</code> ターゲットのファイル名を表します</li>\n<li><code class=\"language-text\">$(@D)</code> ターゲットのディレクトリ名を表します</li>\n</ul>\n<h2>$@ $% $&#x3C;</h2>\n<p>以前出てきたC言語のプログラムをビルドする Makefile はこうでした。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token symbol\">main.o</span><span class=\"token punctuation\">:</span> main.c\n\tgcc -o main.o main.c</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>これが自動変数を使うとこう書けます。重複した記述が減らせていい感じです。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token symbol\">main.o</span><span class=\"token punctuation\">:</span> main.c\n\tgcc -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$^</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-sh line-numbers\"><code class=\"language-sh\">$ make main.o\ngcc -o main.o main.c\n$ ./main.o\nreligion</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">$^</code> はターゲットに与えられたすべての必要条件を取るため、必要条件を加えると困ってしまうことがあります。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> hoge\n\n<span class=\"token symbol\">main.2.o</span><span class=\"token punctuation\">:</span> main.c hoge\n\tgcc -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$^</span>\n\n<span class=\"token symbol\">hoge</span><span class=\"token punctuation\">:</span>\n\techo <span class=\"token string\">\"do nothing\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-sh line-numbers\"><code class=\"language-sh\">$ make main.2.o\necho &quot;do nothing&quot;\ndo nothing\ngcc -o main.2.o main.c hoge\nclang: error: no such file or directory: &#39;hoge&#39;\nmake: *** [Makefile:5: main.2.o] Error 1</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>そういったときは最初の必要条件だけを表す <code class=\"language-text\">$&lt;</code> が使えます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token symbol\">main.3.o</span><span class=\"token punctuation\">:</span> main.c hoge\n\tgcc -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$&lt;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-sh line-numbers\"><code class=\"language-sh\">$ make main.3.o\necho &quot;do nothing&quot;\ndo nothing\ngcc -o main.3.o main.c</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>$(@F) $(@D)</h2>\n<p><code class=\"language-text\">$(@F)</code> <code class=\"language-text\">$(@D)</code> はターゲットのファイル名とディレクトリ名です。\n例えばディレクトリの下に生成物を作りたい場合、こんな風に書けます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token symbol\">bin/main.1.o</span><span class=\"token punctuation\">:</span> main.c\n\tmkdir -p <span class=\"token variable\">$(@D)</span>\n\tgcc -o <span class=\"token variable\">$(@D)</span>/<span class=\"token variable\">$(@F)</span> <span class=\"token variable\">$&lt;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-sh line-numbers\"><code class=\"language-sh\">$ make bin/main.1.o\nmkdir -p bin\ngcc -o binmain.1.o main.c</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>ですが、依存関係は必要条件に書くとルールが簡素にできるので、個人的に最近はあまり使わずこのように書くことが多いです。\nbin を必要条件に書き、main.c を最初に配置して <code class=\"language-text\">$&lt;</code> で gcc の infile に与えています。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token symbol\">bin/main.2.o</span><span class=\"token punctuation\">:</span> main.c bin\n\tgcc -o <span class=\"token variable\">$@</span> <span class=\"token variable\">$&lt;</span>\n\n<span class=\"token symbol\">bin</span><span class=\"token punctuation\">:</span>\n\tmkdir <span class=\"token variable\">$@</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-sh line-numbers\"><code class=\"language-sh\">$ make bin/main.2.o\nmkdir bin\ngcc -o bin/main.2.o main.c</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>","frontmatter":{"date":"December 04, 2020","slug":"/004-automatic-variable","title":"自動変数"}}},"pageContext":{"slug":"/004-automatic-variable","nodes":[{"node":{"frontmatter":{"slug":"/001-makefile-in-2020","title":"2020年の Makefile"}}},{"node":{"frontmatter":{"slug":"/002-phony-target-and-prerequisites","title":"偽のターゲットと前提条件"}}},{"node":{"frontmatter":{"slug":"/003-variable","title":"変数"}}},{"node":{"frontmatter":{"slug":"/004-automatic-variable","title":"自動変数"}}}]}},"staticQueryHashes":["3649515864","63159454"]}