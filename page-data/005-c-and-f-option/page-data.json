{"componentChunkName":"component---src-templates-markdown-js","path":"/005-c-and-f-option","result":{"data":{"markdownRemark":{"html":"<h1>-C オプションと -f オプション</h1>\n<p>make は通常、カレントディレクトリの Makefile を実行しますが（※1）、別ディレクトリにある Makefile を実行したい場合や、\n目的に応じたファイル名をつけて実行したい場合もあります。\nそういった際に使えるのが <code class=\"language-text\">-C</code> <code class=\"language-text\">-f</code> オプションです。</p>\n<h2>-C</h2>\n<p><code class=\"language-text\">-C</code> オプションは Makefile のあるディレクトリを指定するオプションです。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">-C dir, --directory<span class=\"token operator\">=</span>dir\n    Change to directory <span class=\"token function\">dir</span> before reading the makefiles or doing anything else.\n    If multiple -C options are specified, each is interpreted relative to the\n    previous one: -C / -C etc is equivalent to -C /etc.\n    This is typically used with recursive invocations of make.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>指定されたディレクトリで Makefile を実行するので、ファイルを生成する場合も <code class=\"language-text\">-C</code> で指定したディレクトリからの相対パスで作られます。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> all touched clean\n\n<span class=\"token symbol\">all</span><span class=\"token punctuation\">:</span> touched\n\tpwd\n\tls -lsa touched\n\n<span class=\"token symbol\">touched</span><span class=\"token punctuation\">:</span>\n\ttouch <span class=\"token variable\">$@</span>\n\n<span class=\"token symbol\">clean</span><span class=\"token punctuation\">:</span>\n\trm -rf touched</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token builtin class-name\">pwd</span>\n/work\n$ <span class=\"token function\">make</span> -C example/005 all\nmake: Entering directory <span class=\"token string\">'/work/example/005'</span>\n<span class=\"token function\">touch</span> touched\n<span class=\"token builtin class-name\">pwd</span>\n/work/example/005\n<span class=\"token function\">ls</span> -lsa touched\n<span class=\"token number\">0</span> -rw-r--r-- <span class=\"token number\">1</span> root root <span class=\"token number\">0</span> Dec  <span class=\"token number\">5</span> 09:50 touched\nmake: Leaving directory <span class=\"token string\">'/work/example/005'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>-f</h2>\n<p><code class=\"language-text\">-f</code> は実行するファイル名を指定するオプションです。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">-f file, --file<span class=\"token operator\">=</span>file, --makefile<span class=\"token operator\">=</span>FILE\n    Use <span class=\"token function\">file</span> as a makefile.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>目的に応じたファイルに Makefile を分割すると、メンテナンス性や可読性、使いやすさなどが上がります。\n拡張子には <code class=\"language-text\">.mk</code> をつけることが多く、例えば <code class=\"language-text\">ci.mk</code> <code class=\"language-text\">docker.mk</code> <code class=\"language-text\">test.mk</code> <code class=\"language-text\">integration-test.mk</code> といった具合にします。</p>\n<p>これはその一例として <a href=\"https://imagemagick.org/\">ImageMagick</a> で遊ぶ <code class=\"language-text\">imagemagick.mk</code> です（※2）。</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-makefile line-numbers\"><code class=\"language-makefile\"><span class=\"token builtin\">.PHONY</span><span class=\"token punctuation\">:</span> clean\n\n<span class=\"token comment\"># http://www.imagemagick.org/Usage/distorts/</span>\n<span class=\"token symbol\">koala.gif</span><span class=\"token punctuation\">:</span>\n<span class=\"token symbol\">\tcurl http</span><span class=\"token punctuation\">:</span>//www.imagemagick.org/Usage/images/koala.gif > <span class=\"token variable\">$@</span>\n\n<span class=\"token symbol\">distortion.gif</span><span class=\"token punctuation\">:</span> koala.gif\n<span class=\"token symbol\">\tconvert <span class=\"token variable\">$&lt;</span> -virtual-pixel Black -define shepards</span><span class=\"token punctuation\">:</span>power<span class=\"token operator\">=</span>8.0 -distort Shepards <span class=\"token string\">'30,11 20,11  48,29 58,29'</span> <span class=\"token variable\">$@</span>\n\n<span class=\"token symbol\">clean</span><span class=\"token punctuation\">:</span>\n\trm -rf distortion.gif</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">-f</code> オプションはファイル名を指定するだけで、実行ディレクトリはカレントディレクトリのままです。\nそのため、相対パスで記述されているターゲットはカレントディレクトリに作成されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token builtin class-name\">pwd</span>\n/tmp\n$ <span class=\"token function\">make</span> -f /work/example/005/imagemagick.mk distortion.gif\n<span class=\"token function\">curl</span> http://www.imagemagick.org/Usage/images/koala.gif <span class=\"token operator\">></span> koala.gif\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n<span class=\"token number\">100</span>  <span class=\"token number\">4159</span>  <span class=\"token number\">100</span>  <span class=\"token number\">4159</span>    <span class=\"token number\">0</span>     <span class=\"token number\">0</span>   <span class=\"token number\">9304</span>      <span class=\"token number\">0</span> --:--:-- --:--:-- --:--:--  <span class=\"token number\">9283</span>\nconvert koala.gif -virtual-pixel Black -define shepards:power<span class=\"token operator\">=</span><span class=\"token number\">8.0</span> -distort Shepards <span class=\"token string\">'30,11 20,11  48,29 58,29'</span> distortion.gif\n$ <span class=\"token function\">ls</span> /tmp/koala.gif /tmp/distortion.gif\n/tmp/distortion.gif  /tmp/koala.gif</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">-C</code> と <code class=\"language-text\">-f</code> は併用でき、対象ファイルが存在するディレクトリで実行したい場合はこのように併用します。基本的には併用することを前提にした方が考えることが減ってよいと思います。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">$ <span class=\"token function\">make</span> -C /work/example/005 -f imagemagick.mk distortion.gif\nmake: Entering directory <span class=\"token string\">'/work/example/005'</span>\nconvert koala.gif -virtual-pixel Black -define shepards:power<span class=\"token operator\">=</span><span class=\"token number\">8.0</span> -distort Shepards <span class=\"token string\">'30,11 20,11  48,29 58,29'</span> distortion.gif\nmake: Leaving directory <span class=\"token string\">'/work/example/005'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>リンク</h2>\n<ul>\n<li><a href=\"https://www.gnu.org/software/make/manual/make.html#Makefile-Names\">https://www.gnu.org/software/make/manual/make.html#Makefile-Names</a></li>\n</ul>\n<p>※1. 実際には GNUmakefile, makefile, Makefile の順に探査して最初に見つかったものを実行します。</p>\n<p>※2. こういった Makefile を書き始めて休日を潰すことがまれによくある</p>","excerpt":"-C オプションと -f オプション make は通常、カレントディレクトリの Makefile を実行しますが（※1）、別ディレクトリにある Makefile を実行したい場合や、\n目的に応じたファイル名をつけて実行したい場合もあります。\nそういった際に使えるのが   オプションです。 -C  オプションは Mak…","frontmatter":{"date":"December 05, 2020","slug":"/005-c-and-f-option","title":"-C オプションと -f オプション"}}},"pageContext":{"slug":"/005-c-and-f-option","nodes":[{"node":{"frontmatter":{"slug":"/001-makefile-in-2020","title":"2020年の Makefile"}}},{"node":{"frontmatter":{"slug":"/002-phony-target-and-prerequisites","title":"偽のターゲットと前提条件"}}},{"node":{"frontmatter":{"slug":"/003-variable","title":"変数"}}},{"node":{"frontmatter":{"slug":"/004-automatic-variable","title":"自動変数"}}},{"node":{"frontmatter":{"slug":"/005-c-and-f-option","title":"-C オプションと -f オプション"}}},{"node":{"frontmatter":{"slug":"/006-default-target","title":"デフォルトターゲット"}}}]}},"staticQueryHashes":["3649515864","63159454"]}