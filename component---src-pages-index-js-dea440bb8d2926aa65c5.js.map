{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","result","useStaticQuery","rows","Array","map","_","index","allMarkdownRemark","edges","find","row","date","Date","node","frontmatter","getDate","getFullYear","title","className","href","key","to","slug"],"mappings":"2KA8EeA,UAxEG,WAChB,IAAMC,EAASC,yBAAe,cAoBxBC,EAAO,YAAI,IAAIC,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAAJ,OAClCN,EAAOO,kBAAkBC,MAAMC,MAAK,SAAAC,GAClC,IAAMC,EAAO,IAAIC,KAAKF,EAAIG,KAAKC,YAAYH,MAC3C,OAAOL,EAAM,IAAMK,EAAKI,WAAa,OAASJ,EAAKK,oBAIvD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,6BAASC,UAAU,aACjB,qCACA,kBAAC,OAAD,CAAMC,KAAK,yDACT,uBAAGD,UAAU,yBAAb,2DAGJ,6BAASA,UAAU,qGAChB,YAAI,IAAIf,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OACrB,6BAASc,IAAKd,EAAOY,UAAU,4CAC7B,wBAAIA,UAAU,iBAAiBZ,EAAM,QAGxCJ,EAAKE,KAAI,SAACM,EAAKJ,GAAN,OAAiBI,EACzB,6BACEU,IAAKd,EACLY,UAAU,yBAEV,kBAAC,OAAD,CAAMG,GAAIX,EAAIG,KAAKC,YAAYQ,MAC7B,wBAAIJ,UAAU,iBACZ,0BAAMA,UAAU,wCACZ,IAAIN,KAAKF,EAAIG,KAAKC,YAAYH,MAAOI,WAExCL,EAAIG,KAAKC,YAAYG,SAK5B,6BAASG,IAAKd,EAAOY,UAAU,yBAC7B,0BAAMA,UAAU,2BAA2BZ,EAAM,OAGpD,YAAI,IAAIH,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAJ,OACrB,6BAASc,IAAKd,EAAOY,UAAU,4CAC7B,wBAAIA,UAAU,iBAAiBZ,EAAM","file":"component---src-pages-index-js-dea440bb8d2926aa65c5.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => {\n  const result = useStaticQuery(graphql`\n    {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              slug\n              title\n            }\n            excerpt(format: PLAIN)\n          }\n        }\n      }\n    }\n  `)\n\n  const rows = [...new Array(31)].map((_, index) => (\n    result.allMarkdownRemark.edges.find(row => {\n      const date = new Date(row.node.frontmatter.date)\n      return index+1 === date.getDate() && 2020 === date.getFullYear()\n    })\n  ))\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <section className=\"px-6 pt-6\">\n        <p>GitHub</p>\n        <Link href=\"https://github.com/tamakiii/make-advent-calendar-2020\">\n          <p className=\"text-xs text-gray-500\">https://github.com/tamakiii/make-advent-calendar-2020</p>\n        </Link>\n      </section>\n      <section className=\"w-screen lg:w-5/6 px-6 py-8 grid grid-cols-1 lg:grid-flow-row lg:grid-cols-7 lg:grid-rows-5 gap-4\">\n        {[...new Array(2)].map((_, index) => (\n          <article key={index} className=\"hidden lg:block p-4 rounded-md shadow-sm\">\n            <h2 className=\"text-gray-200\">{index+29}</h2>\n          </article>\n        ))}\n        {rows.map((row, index) => (row ? (\n          <article\n            key={index}\n            className=\"p-4 rounded-md shadow\"\n          >\n            <Link to={row.node.frontmatter.slug}>\n              <h2 className=\"font-semibold\">\n                <span className=\"lg:block text-bold text-red-500 pr-2\">\n                  {(new Date(row.node.frontmatter.date)).getDate()}\n                </span>\n                {row.node.frontmatter.title}\n              </h2>\n            </Link>\n          </article>\n        ) : (\n          <article key={index} className=\"p-4 rounded-md shadow\">\n            <span className=\"text-bold text-gray-300\">{index+1}</span>\n          </article>\n        )))}\n        {[...new Array(2)].map((_, index) => (\n          <article key={index} className=\"hidden lg:block p-4 rounded-md shadow-sm\">\n            <h2 className=\"text-gray-200\">{index+1}</h2>\n          </article>\n        ))}\n      </section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}